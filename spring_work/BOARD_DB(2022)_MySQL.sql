-- 삭제
DROP VIEW IF EXISTS BLIST;
DROP VIEW IF EXISTS MINFO;
DROP VIEW IF EXISTS RLIST;
--
DROP TABLE IF EXISTS GRADE CASCADE;
DROP TABLE IF EXISTS BOARDFILE CASCADE;
DROP TABLE IF EXISTS REPLY CASCADE;
DROP TABLE IF EXISTS BOARD CASCADE;
DROP TABLE IF EXISTS MEMBER CASCADE;
-- 회원테이블
-- 자식테이블 외래키 제약조건들을 삭제후 부모테이블 삭제
CREATE TABLE IF NOT EXISTS MEMBER(
    M_ID VARCHAR(20) BINARY NOT NULL PRIMARY KEY,
    M_PWD VARCHAR(100) NOT NULL, -- 비번은 암호하하기 위해서
    M_NAME VARCHAR(10) NOT NULL,
    M_BIRTH DATE NOT NULL,
    M_ADDR VARCHAR(50) NOT NULL,
    M_PHONE VARCHAR(13) NOT NULL,
    M_POINT INT DEFAULT 0 NOT NULL
);

INSERT INTO MEMBER(M_ID,M_PWD,M_NAME,M_BIRTH,M_ADDR,M_PHONE,M_POINT)
VALUES('park','1111','박종일','19901007','인천남동구','010-1111-2222',20);
INSERT INTO MEMBER(M_ID,M_PWD,M_NAME,M_BIRTH,M_ADDR,M_PHONE,M_POINT)
VALUES('test','1111','손님','19901231','서울 강남','010-2222-3333',DEFAULT);
COMMIT;

-- 회원등급
CREATE TABLE IF NOT EXISTS GRADE(
    G_CODE CHAR(1) NOT NULL PRIMARY KEY,
    G_NAME VARCHAR(10) NOT NULL,
    G_LOWPOINT INT,
    G_HIGHPOINT INT
);

INSERT INTO GRADE(G_CODE,G_NAME,G_LOWPOINT,G_HIGHPOINT)
VALUES('A','브론즈',0,10);
INSERT INTO GRADE(G_CODE,G_NAME,G_LOWPOINT,G_HIGHPOINT)
VALUES('B','실버',11,20);
INSERT INTO GRADE(G_CODE,G_NAME,G_LOWPOINT,G_HIGHPOINT)
VALUES('C','골드',21,30);
INSERT INTO GRADE(G_CODE,G_NAME,G_LOWPOINT,G_HIGHPOINT)
VALUES('D','다이아',31,100);
COMMIT;
-- SELECT * FROM GRADE;

-- 원글 게시판
CREATE TABLE IF NOT EXISTS BOARD(
    B_NUM INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    B_TITLE VARCHAR(50) BINARY NOT NULL,
    B_CONTENTS TEXT BINARY NOT NULL,
    B_ID VARCHAR(20) BINARY NOT NULL,
    B_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    B_VIEWS INT DEFAULT 0 NOT NULL,
    CONSTRAINT FK_B_ID FOREIGN KEY(B_ID)
	REFERENCES MEMBER(M_ID)
);

-- DUMMY DATA
INSERT INTO BOARD 
VALUES(NULL,'게시글1','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글2','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글3','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글4','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD
VALUES(NULL,'게시글5','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글6','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글7','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD
VALUES(NULL,'게시글8','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글9','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글10','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글11','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글12','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글13','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글14','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글15','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글16','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글17','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글18','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글19','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글20','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글21','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글22','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글23','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글24','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글25','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글26','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글27','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글28','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글29','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글30','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글31','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글32','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글33','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글34','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글35','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글36','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글37','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글38','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글39','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글40','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글41','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD 
VALUES(NULL,'게시글42','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
INSERT INTO BOARD
VALUES(NULL,'게시글43','무궁화꽃이 피었습니다.','park',DEFAULT,DEFAULT);
INSERT INTO BOARD
VALUES(NULL,'게시글44','무궁화꽃이 피었습니다.','test',DEFAULT,DEFAULT);
COMMIT;
-- SELECT * FROM BOARD;

-- 파일 업로드 테이블 추가할 것(1:N)
CREATE TABLE IF NOT EXISTS BOARDFILE(
    BF_NUM INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    BF_BNUM INT NOT NULL,
    BF_ORINAME VARCHAR(50) NOT NULL,
    BF_SYSNAME VARCHAR(50) NOT NULL,
    CONSTRAINT FK_BF_BNUM FOREIGN KEY(BF_BNUM)
	REFERENCES BOARD(B_NUM)
);

-- 답글 게시판
CREATE TABLE IF NOT EXISTS REPLY(
    R_NUM INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    R_BNUM INT NOT NULL,
    R_CONTENTS VARCHAR(200) NOT NULL,
    R_ID VARCHAR(20) BINARY NOT NULL,
    R_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_R_BNUM FOREIGN KEY(R_BNUM)
	REFERENCES BOARD(B_NUM),
    CONSTRAINT FK_R_ID FOREIGN KEY(R_ID)
	REFERENCES MEMBER(M_ID)
 );

-- DUMMY DATA
INSERT INTO REPLY VALUES(NULL,5,'댓글1','park',DEFAULT); 
INSERT INTO REPLY VALUES(NULL,5,'댓글2','park',DEFAULT);
INSERT INTO REPLY VALUES(NULL,6,'댓글1','test',DEFAULT); 
INSERT INTO REPLY VALUES(NULL,6,'댓글2','test',DEFAULT);
COMMIT;
-- SELECT * FROM REPLY;

-- 로그인 후 출력할 회원정보 뷰
CREATE OR REPLACE VIEW MINFO AS
SELECT M.M_ID,M.M_NAME, M.M_POINT,G.G_NAME 
FROM MEMBER M INNER JOIN GRADE G
ON M.M_POINT BETWEEN G.G_LOWPOINT AND G.G_HIGHPOINT;
-- SELECT * FROM MINFO;

-- 최신글 순으로 댓글 출력 VIEW
CREATE OR REPLACE VIEW RLIST AS
SELECT R_BNUM, R_NUM, R_CONTENTS, R_DATE, R_ID
FROM REPLY
ORDER BY R_DATE DESC;
-- SELECT * FROM RLIST;

-- 최신글순으로 원글 출력 VIEW
CREATE OR REPLACE VIEW BLIST AS
SELECT B.B_NUM,    -- BNUM:빈 필드명과 컬럼명이 일치하면 편하다. 
       B.B_TITLE,
       B.B_CONTENTS,
       B.B_ID,
       M.M_NAME,
       B.B_DATE,
       B.B_VIEWS 
FROM BOARD B INNER JOIN MEMBER M
ON B.B_ID=M.M_ID
ORDER BY B.B_DATE DESC;

SELECT * FROM BLIST;



