* 터미널
  - 프로젝트 생성 : npx create-react-app『프로그램명』
  - 프로젝트 실행 : npm start
  - 프로젝트 중지 : ctrl + c > y (엔터)

* React 프로젝트 구조
  - 수정 불가 파일 : index.html (페이지 템플릿)
                    index.js (프로그램 진입점)
  - 그 외 다른 파일들은 변경 및 삭제 가능
  - 하위 폴더 및 프로그램 관련 파일(js, css 등) 생성
    -> src 폴더 내에서만 할 것!

  참고) svg 아이콘 무료 사이트
       https://fontawesome.com/  

* JSX (JavaScript XML) 문법
  - 기본적으로 리액트는 모든 HTML 요소를 JS로 작성하여 화면에 출력
  - 바닐라 JS로 작성할 경우, 작성 및 해석이 어렵기 때문에,
    JS 코드에 순수 HTML 코드를 사용하여 코드 작성에 편의 제공
  - HTML 요소를 리액트에선 Component 라고 함
  - App.js 중 return 안에 작성하는 것에 대한 내용이다! 

  1) 감싸인 요소
     - Component에 여러 요소를 작성하려면 하나의 부모 태그로 감싸야 함
     - <div>, <fragment>, <>(</>) 중 하나 사용
  2) 자바스크립트 표현식 사용
     - 변수나 객체의 값을 출력할 때, {}로 감싸준다
  3) if문 사용 불가 -> 조건연산자
  4) 조건부 렌더링 (&& 활용)
     - 특정 조건을 만족할 때만 출력하는 코드를 작성하는 경우
     function App() {
        const name = "리액트"
        return (
            <div>
                  {name === "리액트" && <h2>리액트 입니다~</h2>)
            </div>
        );
     };
     - name에 '리액트'라는 키워드가 들어가면 <h2> 요소 출력 (아닐 경우 내용 없음)
  5) undefined 랜더링 처리 (|| 활용)
     - 특정 변수의 값이 undefined인 경우 다른 값을 보여줄 때,
     function App() {
        let name = "undefined" (또는 let name;)
        return (
            <div>
                <h2>{name || 'Guest'}</h2>
            </div>
        );
     };
  6) 인라인 스타일링
     - 객체 형태로 스타일 작성.
     - 스타일 속성은 카멜케이스로, 속성 값은 문자열로 작성
  7) className
     - Html의 class 속성 대신 className 사용  
  8) 닫는 태그 사용
     - input, br 같이 닫는 태그가 없던 요소들에도 반드시 닫는 태그 사용    
     - 또는 단축 태그를 사용하여 닫아주면 됨 <input... />
  9) 주석
     - {/*...*/}
